#!/usr/bin/env ruby

APP_PATH = File.expand_path('../../config/application',  __FILE__)
require File.expand_path('../../config/boot',  __FILE__)
require APP_PATH
Rails.application.require_environment!

require 'base64'
require 'net/http'
require 'json'
require 'pp'

SIZE = 256

begin
  Dir.mkdir(Rails.root + "public/data/faces")
rescue Errno::EEXIST
end

def se str
  Shellwords.shellescape str
end

def run cmd
  system( cmd ) or raise "Could not run #{cmd}"
  $? == 0 or raise "Failed command"
end

FPS=0.25

items = Item.where(face_count: nil, deleted: false, variety: 'video').order("taken desc")
items.each do |item|
  begin
    count = 0

    puts "Finding faces in #{item.path}"
    Item.transaction do
      tmp = "/tmp/find-faces.#$$"
      FileUtils.rm_rf tmp
      Dir.mkdir tmp
      run "ffmpeg -v error -i #{se item.full_path} -vsync 1 -vf fps=#{FPS} -y #{se tmp}/out%06d.png"
      files = Dir.glob "#{tmp}/*.png"
      files.sort.each_with_index do |path, index|
        data = File.binread path
        enc = "data:image/png;base64," + Base64.encode64(data)
        puts "Looking for faces in frame #{index+1}/#{files.size}"

        uri = URI( 'http://face:5000/detect' )

        res = nil

        Net::HTTP.start uri.host, uri.port do |http|
          req = Net::HTTP::Post.new uri, 'Content-Type' => 'application/json'
          req.body = { img: [enc] }.to_json
          str = http.request(req).body
          res = JSON.parse str, symbolize_names: true
        end

        if res[:success] != false
          puts "  found #{res.size} faces"
          res.each do |k,info|
            region = info[:facial_area]
            count += 1
            face = Face.create!(
              item: item,
              position: info.to_json,
              # FFMPEG seems to be taking the middle frame out of the group
              timestamp: (index + 0.5) / FPS,
            )

            dest = face.path
            temp = "#{dest}.#$$.jpg"
            image = MiniMagick::Image.open path
            image.format 'jpeg'
            image.combine_options do |c|
              c.auto_orient
              c.crop "#{region[2] - region[0]}x#{region[3] - region[1]}+#{region[0]}+#{region[1]}"
              c.thumbnail "#{SIZE}x#{SIZE}>"
              c.colorspace 'sRGB'
              c.quality 88
            end
            image.write temp
            File.chmod 0644, temp
            File.rename temp, dest
          end
        end
      end

      item.face_count = count
      item.save!
    end
  rescue
    warn "Problem with #{item.path}: #{$!}"
  end
end
