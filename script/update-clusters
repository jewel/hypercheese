#!/usr/bin/env ruby

APP_PATH = File.expand_path('../../config/application',  __FILE__)
require File.expand_path('../../config/boot',  __FILE__)
require APP_PATH
Rails.application.require_environment!

require 'json'

canonical = Face.where("tag_id is not null").order(:tag_id).to_a
canonical.select! { _1.embedding? }
total = Face.all.size
count = 0

puts "#{canonical.size} canonical faces, #{total} faces, #{canonical.size * total} comparisons"

Face.all.includes(:item).find_in_batches.with_index do |group, batch|
  start = Time.new
  puts "Processing group #{batch}, #{canonical.size * group.size} comparisons"
  Face.transaction do
    group.each do |face|
      count += 1
      next unless face.embedding?
      winner = nil
      max = -2.0
      canonical.each do |canon|
        diff = canon.distance face
        if diff > max
          winner = canon
          max = diff
        end
      end
      if winner
        face.cluster_id = winner.id
        face.similarity = max
      else
        face.cluster_id = nil
        face.similarity = nil
      end
      face.save!
    end
  end
  duration = Time.new - start
  rate = group.size / duration
  remaining_faces = total - count
  remaining_time = remaining_faces / rate
  puts "#{duration.round} seconds, #{rate.round(1)} faces/s; #{(remaining_time/60).round} minutes left"
end
puts "Done"
