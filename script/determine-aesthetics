#!/usr/bin/env ruby

APP_PATH = File.expand_path('../../config/application',  __FILE__)
require File.expand_path('../../config/boot',  __FILE__)
require APP_PATH
Rails.application.require_environment!

require_relative '../lib/embedding_store'
require 'base64'
require 'net/http'
require 'json'
require 'pp'

store = EmbeddingStore.new "clip", 768

Item.where(variety: 'photo', aesthetics_score: nil).find_in_batches do |batch|
  batch.each do |item|
    Item.transaction do
      begin
        puts "Running for item #{item.id}"
        data = File.binread item.resized_path(:large)
        enc = "data:image/jpeg;base64," + Base64.encode64(data)

        uri = URI( 'http://face:7860/run/predict' )

        res = nil

        Net::HTTP.start uri.host, uri.port do |http|
          req = Net::HTTP::Post.new uri, 'Content-Type' => 'application/json'
          req.body = { data: [enc] }.to_json
          str = http.request(req).body
          res = JSON.parse str, symbolize_names: true
        end

        res = res[:data][0]
        puts " => #{res[:score]}"
        item.aesthetics_score = res[:score]
        store.put( item.id, res[:embedding] )
        item.save!
      rescue
        warn "Problem with #{item.path}: #{$!}"
      end
    end
  end
end
