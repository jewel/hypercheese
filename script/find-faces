#!/usr/bin/env ruby

APP_PATH = File.expand_path('../../config/application',  __FILE__)
require File.expand_path('../../config/boot',  __FILE__)
require APP_PATH
Rails.application.require_environment!

require 'base64'
require 'net/http'
require 'json'
require 'pp'

begin
  Dir.mkdir(Rails.root + "public/data/faces")
rescue Errno::EEXIST
end

SIZE = 256

items = Item.where(face_count: nil, deleted: false, variety: 'photo').order("taken desc")
items.each do |item|
  begin
    puts "Finding faces in #{item.path}"
    Item.transaction do
      path = item.full_path
      data = File.binread path
      enc = "data:image/jpeg;base64," + Base64.encode64(data)

      uri = URI( 'http://localhost:5000/detect' )

      res = nil

      Net::HTTP.start uri.host, uri.port do |http|
        req = Net::HTTP::Post.new uri, 'Content-Type' => 'application/json'
        req.body = { img: [enc] }.to_json
        str = http.request(req).body
        res = JSON.parse str, symbolize_names: true
      end

      pp res

      count = 0

      if res[:success] != false
        res.each do |k,info|
          region = info[:facial_area]
          count += 1
          face = Face.create!(
            item: item,
          )

          dest = face.path
          temp = "#{dest}.#$$.jpg"
          image = MiniMagick::Image.open path
          image.format 'jpeg'
          image.combine_options do |c|
            c.auto_orient
            c.crop "#{region[2] - region[0]}x#{region[3] - region[1]}+#{region[0]}+#{region[1]}"
            c.thumbnail "#{SIZE}x#{SIZE}>"
            c.colorspace 'sRGB'
            c.quality 88
          end
          image.write temp
          File.chmod 0644, temp
          File.rename temp, dest
        end
      end

      item.face_count = count
      item.save!
    end
  rescue
    warn "Problem with #{item.path}: #{$!}"
  end
end
